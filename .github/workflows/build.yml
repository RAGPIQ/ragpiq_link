name: Build and Publish Electron App

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers only when you push a version tag like v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
      
      - name: Ensure correct electron-builder version
        run: npm install electron-builder@24.12.0

      - name: Set up keychain for macOS signing
        if: matrix.os == 'macos-latest'
        run: |
          echo "${{ secrets.MAC_P12_BASE64 }}" | base64 --decode > certificate.p12
          security create-keychain -p "buildkey" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "buildkey" build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.MAC_P12_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "buildkey" build.keychain

      - name: Build Electron app
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          NOTARIZE_APP_BUNDLE_ID: ${{ secrets.NOTARIZE_APP_BUNDLE_ID }}

      - name: Publish release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/**/Ragpiq*.dmg
            dist/**/Ragpiq*.exe
            dist/**/Ragpiq*.zip
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}